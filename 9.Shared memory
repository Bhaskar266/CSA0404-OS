#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/ipc.h>
#include <sys/shm.h>

#define SHM_SIZE 1024 
int main() {
    int shm_id; 
    char *shm_ptr;
    if ((shm_id = shmget(IPC_PRIVATE, SHM_SIZE, IPC_CREAT | 0666)) < 0) {
        perror("shmget");
        exit(1);
    }

    if ((shm_ptr = shmat(shm_id, NULL, 0)) == (char *) -1) {
        perror("shmat");
        exit(1);
    }

  
    pid_t pid = fork();

    if (pid < 0) {
        perror("fork");
        exit(1);
    } else if (pid == 0) {
        printf("Child process writing to shared memory...\n");
        sprintf(shm_ptr, "Hello from the child process!");
        exit(0);
    } else {
        wait(NULL); 
        printf("Parent process reading from shared memory: %s\n", shm_ptr);
        if (shmdt(shm_ptr) == -1) {
            perror("shmdt");
            exit(1);
        }

        if (shmctl(shm_id, IPC_RMID, NULL) == -1) {
            perror("shmctl");
            exit(1);
        }
    }

    return 0;
}
